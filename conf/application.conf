# Copyright 2020 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include "backend.conf"

# An ApplicationLoader that uses Guice to bootstrap the application.
play.application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "uk.gov.hmrc.agentsexternalstubs.wiring.SpecialCasesRequestHandler"

# Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or store your own.
# An audit connector must be provided.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"

# Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or store your own.
# A metric filter must be provided
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

# Provides MongoDb connector
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

# Provides an implementation and configures all filters required by a Platform frontend microservice.
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.backend.BackendModule"
play.http.filters = "uk.gov.hmrc.agentsexternalstubs.wiring.MicroserviceFilters"

# Json error handler
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.backend.http.JsonErrorHandler"

appName = "agents-external-stubs"
play.http.router = prod.Routes
play.modules.enabled += "MicroserviceModule"

controllers {

  uk.gov.hmrc.agentsexternalstubs.controllers.AuthStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.CitizenDetailsStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.ConfigController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.DataStreamStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.DesStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.EnrolmentStoreProxyStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.KnownFactsController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.PlanetsController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.RecordsController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.SignInController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.SpecialCasesController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.UserDetailsStubController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.UsersController {
    needsAuditing = false
    needsLogging = false
  }

  uk.gov.hmrc.agentsexternalstubs.controllers.UsersGroupsSearchStubController {
    needsAuditing = false
    needsLogging = false
  }
}

microservice {
  metrics {
    graphite {
      host = localhost
      port = 2003
      prefix = play.${appName}.
      enabled = false
      legacy = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    user-details {
      host = localhost
      port = 9978
    }

    citizen-details {
      host = localhost
      port = 9337
    }

    enrolment-store-proxy {
      host = localhost
      port = 7775
    }

    users-groups-search {
      host = localhost
      port = 9984
    }

    tax-enrolments {
      host = localhost
      port = 9995
    }

    des {
      host = localhost
      port = 9904
      environment = test
      authorization-token = secret
    }

    agent-access-control {
      host = localhost
      port = 9431
      protocol = http
    }

    auth-login-api {
      host = auth-login-api.protected.mdtp
      port = 443
      protocol = https
    }

    agent-client-authorisation {
      host = localhost
      port = 9432
      protocol = http
    }

    agent-client-relationships {
      host = localhost
      port = 9434
      protocol = http
    }

    agent-fi-relationship {
      host = localhost
      port = 9427
      protocol = http
    }

    agent-mapping {
      host = localhost
      port = 9439
      protocol = http
    }

    agent-subscription {
      host = localhost
      port = 9436
      protocol = http
    }

    agent-services-account {
      host = localhost
      port = 9402
      protocol = http
    }

    ni-exemption-registration {
      host = localhost
      port = 9111
      protocol = http
    }

    api-platform-test-user {
      host = localhost
      port = 9617
      protocol = http
      # switch: when to lookup api-platform for missing users, either for all planets (true) or only for the default "hmrc" planet (false)
      sync-users-all-planets=false
    }

    sso {
      host = localhost
      port = 9974
      protocol = http
    }

    file-upload {
      host = localhost
      port = 8898
      protocol = http
    }

    file-upload-frontend {
      host = localhost
      port = 8899
      protocol = http
    }

    identity-verification {
      host = localhost
      port = 9927
      protocol = http
    }

    personal-details-validation {
      host = localhost
      port = 9967
      protocol = http
    }
  }
}

metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

controllers {
  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  confidenceLevel = 50
}

mongodb {
  uri = "mongodb://localhost:27017/agents-external-stubs?heartbeatFrequencyMS=20000&rm.failover=remote"
}

mongo-async-driver {
  akka {
    log-dead-letters = 0
    log-dead-letters-during-shutdown = off
    loglevel = "WARNING"
  }
}

http.port=9009

httpHeadersWhitelist = ["X-Client-ID"]

rm.failover=remote
heartbeatFrequencyMS=20000

akka.actor.default-dispatcher {
  fork-join-executor {
    # Min number of threads to cap factor-based parallelism number to
    parallelism-min = 8

    # The parallelism factor is used to determine thread pool size using the
    # following formula: ceil(available processors * factor). Resulting size
    # is then bounded by the parallelism-min and parallelism-max values.
    parallelism-factor = 3.0

    # Max number of threads to cap factor-based parallelism number to
    parallelism-max = 64

    # Setting to "FIFO" to use queue like peeking mode which "poll" or "LIFO" to use stack
    # like peeking mode which "pop".
    task-peeking-mode = "FIFO"
  }
}

features {

  # Start local proxies for replaced services (auth, etc.)
  proxies=true

  # Auth cache should be only enabled on Staging when in single instance mode
  authCache=false

  # Special cases should be disabled on Staging for performance reasons
  specialCases=true

  # Pre-loading record templates helps support high volume perf testing on Staging
  preloadRecordsForDefaultUserIds=false

  # Clear old documents daily, intentded for Staging
  clearOldMongoDbDocumentsDaily=false

}